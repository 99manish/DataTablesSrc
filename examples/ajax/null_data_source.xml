<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="5">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Generated content for a column</title>
<js><![CDATA[
$(document).ready(function() {
	$('#example').dataTable( {
		"ajax": "sources/arrays.txt",
		"columnDefs": [ {
			"targets": -1,
			"data": null,
			"defaultContent": "<button>Click!</button>"
		} ]
	} );
} );
]]></js>

<info><![CDATA[

In some tables you might wish to have some content generated automatically. This can be done in a number of ways:

* `dt-init columns.render` for content that is dynamic
* `dt-init columns.defaultContent` for static content

This examples shows the use of `dt-init columns.defaultContent` to create a _button_ element in the last column of the table. There is no action taken on a click of the buttons in this example, but I'm sure you can see how jQuery listeners could be used to perform custom actions.

Note also that the `dt-init columns.data` option for the column has been set to `null` to indicate that the column has no information that should be sourced from the Ajax data source object.

]]></info>

</dt-example>
