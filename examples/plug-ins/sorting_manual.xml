<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html-comma" order="3">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Sorting plug-ins (no type detection)</title>
<js><![CDATA[

$.fn.dataTable.ext.type.sort['numeric-comma-pre'] = function ( d ) {
	return parseFloat( d.replace(/,/g, '.') ) || 0;
};

$(document).ready(function() {
	$('#example').dataTable( {
		"columnDefs": [ {
			"type": "numeric-comma",
			"targets": 3
		} ]
	} );
} );

]]></js>

<info><![CDATA[

Although DataTables will sort a number of data types using the built in methods, When dealing with more complex formatted data, it can be desirable to define the sorting order yourself. Using plug-in sorting functions, you have have DataTables sort data in any manner you wish.

This is done by using the `dt-init columns.type` parameter, in combination with a sorting plug-in. The sorting plug-in can be be of any level of complexity (natural sorting for example can be fairly complex while also very powerful), and is defined by attaching to the `$.fn.dataTable.ext.type.sort` object. For more information about sorting plug-ins; creating them and their requirements, please refer to the plug-in development documentation.

This example shows sorting with a comma for a decimal place, as is often used in parts of Europe.

A wide variety of ready made sorting plug-ins can be found on [the DataTables plug-ins page](//datatables.net/plug-ins/sorting).

]]></info>

</dt-example>
