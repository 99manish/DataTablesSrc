<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="7">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Row selection</title>
<js><![CDATA[

$(document).ready(function() {
	var selected = [];

	$("#example").dataTable({
		"processing": true,
		"serverSide": true,
		"ajax": "scripts/id.php",
		"rowCallback": function( row, data, displayIndex ) {
			if ( $.inArray(data.DT_RowId, selected) !== -1 ) {
				$(row).addClass('row_selected');
			}
		}
	});

	$('#example tbody').on('click', 'tr', function () {
		var id = this.id;
		var index = $.inArray(id, selected);

		if ( index === -1 ) {
			selected.push( id );
		} else {
			selected.splice( index, 1 );
		}

		$(this).toggleClass('row_selected');
	} );
} );

]]></js>

<info><![CDATA[

When you want to detail with user selectable rows and DataTables, it is relatively simple when using DOM based data - but when using server-side processing, DataTables doesn't retain DOM row elements over pages / filtering etc. As such, you will need to keep a track of which rows a user as selected and mark them as selected on each draw.

This is shown in this demo, which uses a unique ID assigned to the TR element (this is done automatically through the use of the `DT_RowId` special property returned as part of the object given by the server for each row).

]]></info>

</dt-example>
