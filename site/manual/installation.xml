<?xml version="1.0" encoding="UTF-8" ?>
<dt-page order="1" comments="yes" main-nav="yes">
	<title>Installation</title>

	<summary>
	<![CDATA[

How to get DataTables up and running on your web-site. This section details the requirements DataTables has of your HTML tables, what files you need to include to have DataTables enhance your tables, how to include them and how to run DataTables. You'll be up and running in less than two minutes!

	]]>
	</summary>

	<content>
	<![CDATA[

DataTables is a powerful Javascript library for adding interaction features to HTML tables, and while simplicity is a core design principle for the project as a whole, it can appear quite daunting to get started. However, taking those first steps and getting DataTables running on your web-site is actually quite straight forward as you need only include two files additional in your page:

* The DataTables Javascript file
* The DataTables CSS file

There are other files available such as [Editor](//editor.datatables.net) for adding editing abilities, and [other plug-ins](/extras), which can be used to extend the feature set of DataTables, but basically, all you need to do is include these two files to get up and running!


## Requirements

Before we get started, we need to consider the requirements DataTables has in order to operate.

### Dependencies

DataTables has only one library dependency (other software upon which it relies in order to work) - [jQuery](//jquery.com). Being a jQuery plug-in, DataTables makes use of many of the excellent features that jQuery provides, and hooks into the jQuery plug-in system, in the same way as [all other jQuery plug-ins](//plugins.jquery.com/). jQuery 1.7 or newer will work with DataTables, although typically you will want to use the latest version. DataTables includes everything else that it requires to operate.

### HTML

For DataTables to be able to enhance an HTML table, the table must be valid, well formatted HTML, with a header (`dt-tag thead`) and a body (`dt-tag tbody`). An optional footer (`dt-tag tfoot`) can also be used.

```html
<table id="table_id" class="display">
    <thead>
        <tr>
            <th>Column 1</th>
            <th>Column 2</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Row 1 Data 1</td>
            <td>Row 1 Data 2</td>
        </tr>
        <tr>
            <td>Row 2 Data 1</td>
            <td>Row 2 Data 2</td>
        </tr>
    </tbody>
</table>
```

If you are generating your HTML document using a server-side program, such as a PHP script, a Ruby script, a C# program or anything else - all they need to do is output your table like this. This is exactly what you would have for a normal HTML table, although sometimes you might need to add the `dt-tag thead` and `dt-tag tbody` tags, as these aren't always used (they allow DataTables to know what should be used for the column headers and the click-to-order controls).

Note that DataTables can actually generate the `dt-tag thead` and `dt-tag tbody` for you, along with all of the rows and cells of the table, if you are using Ajax sourced data, but for the moment we'll focus on a plain HTML. For more information about the different data sources DataTables can use, please see the [data sources](/manual/data-sources) section of this manual.


## Including Javascript / CSS

The key part of the installation of DataTables is including the DataTables source files on your page. As noted at the top of this page, this simply involves including the DataTables Javascript and CSS files. The CSS file is actually optional, but it provides default styling for your table to make it look good with minimum effort. See the [style theme creator](/manual/styling/theme-creator) if you want to customise the colours of the default DataTables CSS.

The required files can be installed in one of two different ways:

* Using a CDN
* Locally

### CDN

A CDN is a [Content Delivery Network](//en.wikipedia.org/wiki/Content_delivery_network) which has edge servers that are tuned to provide media files with very low latency to web-browsers, and as a user receives a file from the CDN the browser will cache it for reuse. This means that different sites using the same Javascript library can share a large performance improvement since the browser does not need to download the same file from different servers for each site.

DataTables is available on two CDNs, [our own](//cdn.datatables.net), powered by CloudFlare, and the [Microsoft Ajax CDN](//www.asp.net/ajaxlibrary/CDN.ashx#jQuery_DataTables_Releases_on_the_CDN_7).

To include DataTables on your page simply include the following HTML:

```html
<!-- DataTables CSS -->
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/{dt-release-version}/css/jquery.dataTables.css">
 
<!-- jQuery -->
<script type="text/javascript" charset="utf8" src="//code.jquery.com/jquery-1.10.2.min.js"></script>
 
<!-- DataTables -->
<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/{dt-release-version}/js/jquery.dataTables.js"></script>
```

### Local installation

If you prefer not to use a CDN, and instead have the files hosted on your own server (this can be beneficial for cases when you want to optimise for performance, where you can combine all Javascript and CSS files into just one file each, reducing network overhead), or if you want to modify the files at all, it is just as simple to get going with DataTables.

Simply [download the latest version](/download) of DataTables, upzip and upload to your web-server. You will then have a directory such as `dt-path DataTables-{dt-release-version}` available on your server. Then include DataTables on your page using the following HTML:

```html
<!-- DataTables CSS -->
<link rel="stylesheet" type="text/css" href="/DataTables-{dt-release-version}/css/jquery.dataTables.css">
 
<!-- jQuery -->
<script type="text/javascript" charset="utf8" src="/DataTables-{dt-release-version}/js/jquery.js"></script>
 
<!-- DataTables -->
<script type="text/javascript" charset="utf8" src="/DataTables-{dt-release-version}/js/jquery.dataTables.js"></script>
```


## Initialising DataTables

That's almost it! We've got the HTML table we want to enhance, and we've got all the software and styles we need. All that is now required is to to tell DataTables to actually work its magic on the table. This is done with a few lines of Javascript:

```js
$(document).ready( function () {
    $('#table_id').DataTable();
} );
```

< # Upgrade note:
<
< If you are upgrading from DataTables 1.9 or earlier, you might notice that a capital `D` is used to initialise the DataTable here. `$().DataTable()` returns a [DataTables API instance](/reference/type/DataTables.Api), while `$().dataTable()` will also initialise a DataTable, but returns a [jQuery object](/reference/type/jQuery).
<
< Please refer to the [API manual](api) for further information.

If you've used jQuery before, you will recognise the form of this script: we wait for the document to be fully ready, and then select the table we want, and run the DataTables function on it.

That's it! DataTables will add ordering, searching, paging and information to your table by default, giving your end users the ability to find the information they want as quickly as possible.

If you want to customise your DataTable, this can be done by specifying configuration parameters in an object passed to the `DataTable()` function. For information on how to use these configuration parameter, please refer to the [options manual page](options).


## Next steps

With the basics of how to get DataTables going under your belt, you might now want to explore some of the other options to enhance your tables further:

* [Customise the DataTables options](/manual/options) to suit your needs.
* [Use the API](/manual/api) to access and control the table programmatically.
* [Style the table](/manual/styling/theme-creator) to match the theme of your web-site.
* [Explore the DataTables examples](/examples).
* [Take part in the DataTables community](/forums). Ask questions, answer others, make suggestions or simply say "Hi"!

	]]>
	</content>
</dt-page>