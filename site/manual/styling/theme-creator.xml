<?xml version="1.0" encoding="UTF-8" ?>
<dt-page order="2" comments="yes">
	<title>Theme creator</title>

	<summary>
	<![CDATA[

This online style builder will let you customise the colouring of the DataTables stylesheet to fit in seamlessly with your web-site or app. The created stylesheet still provides the [class feature selection abilities](/manual/styling/classes) of the default stylesheet, so your table matches what you need exactly.

	]]>
	</summary>

	<css src="/media/css/jquery.minicolors.css">
		div.tabs button.btn {
			font-size: 0.9em;
			padding: 0.75em 1em;
			margin-bottom: 2em;
		}
	</css>
	<js src="/media/js/jquery.minicolors.min.js" >
	<![CDATA[

function validate_width ( val ) {
	if ( val.match(/[^\d]/) ) {
		throw 'Border width can only be an integer value';
	}
	else if ( parseInt( val, 10 ) > 12 ) {
		throw 'Border width maximum is 12px. If you require a larger value, please download the SCSS file and compile manually';
	}
}

function validate_style ( val ) {
	if ( $.inArray( val, [
			"solid",
			"none",
			"hidden",
			"dotted",
			"dashed",
			"double",
			"groove",
			"ridge",
			"inset",
			"outset"
		] ) === -1 )
	{
		throw 'Invalid border style';
	}
}

function validate_colour ( val ) {
	if ( ! val.match( /^#[\dabcdef]{6}$/i ) ) {
		throw 'Invalid colour. Please enter a six character hex colour';
	}
}


$(document).ready( function () {
	// If loading with a query string set the default values

	// and then load the required stylesheet over the default


	$('input.colour-picker').minicolors();

	$('#style').click( function (e) {
		e.preventDefault();

		var error = false;
		var data = {};

		// Client-side validate
		$('div.content form input, div.content form select').each( function () {
			var name = this.name;
			var val = $(this).val();

			if ( error ) {
				// Only one error at a time
				return;
			}

			try {
				switch( name ) {
					case 'table-border-width':
					case 'row-border-width':
						validate_width( val );
						break;

					case 'table-border-style':
					case 'row-border-style':
						validate_style( val );
						break;

					case 'table-border-colour':
					case 'row-border-colour':
					case 'row':
					case 'row-selected':
					case 'control-text':
					case 'paging-active':
					case 'paging-hover':
						validate_colour( val );
						break;

					default:
						break;
				}
			} catch ( e ) {
				console.log( e );
				error = true;
				alert( 'Invalid input: '+val );
				this.focus();
				return;
			}

			data[ name ] = val;
		} );

		if ( error ) {
			return;
		}

		// Ajax load the new stylesheet
		$.ajax( {
			url: '/media/feeds/theme-creator',
			type: 'POST',
			data: data,
			dataType: 'json',
			success: function ( json ) {
				if ( json.error ) {
					alert( 'An error occurred: '+json.error );
					return;
				}

				var insert = function ( id, val ) {
					var parent = $('#'+id).parent();
					$('#'+id).remove();

					parent.append(
						$('<code id="'+id+'" class="multiline language-css"></code>').html( val )
					);

					SyntaxHighlighter.highlight( {}, $('#'+id)[0] );
				};

				insert( 'css-out', json.css );
				insert( 'scss-out', json.scss );

				$('#compiled-scss').remove();
				$('<style id="compiled-scss" type="text/css"></style>')
					.html( json.css )
					.appendTo( 'head' );
			}
		} );
	} );

	// Tabs
	$('ul.tabs li').click( function () {
		$('ul.tabs li.active').removeClass('active');
		$(this).addClass('active');

		$('div.tabs>div')
			.css('display', 'none')
			.eq( $(this).index() ).css('display', 'block');
	} );
	$('ul.tabs li.active').click();

	// Example table
	$('#example').DataTable( {
		columnDefs: [
			{ visible: false, targets: [1, -2] }
		]
	} );


	// Class selector
	$('div.tabs button.btn').click( function () {
		$(this).toggleClass('active');

		$('#example')
			.removeClass( 'display stripe hover cell-border row-border order-column' )
			.addClass(
				$('div.tabs button.btn.active').map( function (i, el) {
					return $(el).data('class');
				} ).toArray().join(' ')
			);
	} );
} );

	]]>
	</js>

	<content>
	<![CDATA[

This online style builder will let you customise the colouring of the DataTables stylesheet to fit in seamlessly with your web-site or app. Simply select the colours you want for your table using the options below, and click the *Create stylesheet* button. The page will then reload and show your customised table below, with the CSS available to copy and paste for your site.

The DataTables stylesheet is written in [SCSS](//sass-lang.com/), making it very easy to customise - providing the ability to create this online style designer! If you want to customise your stylesheet beyond the options of this form, you are very much encouraged to do so - this is where the fun is! The SCSS used to create the table is also shown below.


## Style selector

<div class="box">
	<form>
		<div class="field border">
			<label>Table section border:</label>
			<div>
				<input name="table-border-width" type="text" value="1" class="width-picker" />px
				<select name="table-border-style" size="1">
					<option value="solid">Solid</option>
					<option value="none">None</option>
					<option value="hidden">Hidden</option>
					<option value="dotted">Dotted</option>
					<option value="dashed">Dashed</option>
					<option value="double">Double</option>
				</select>
				<input name="table-border-colour" type="text" value="#111111" class="colour-picker" />
				<span>The table section border is applied between the table header and the table body and between the table body and the table footer. If there is no `dt-tag tfoot` element, it is applied to the bottom of the table.</span>
			</div>
			<div class="clear"></div>
		</div>

		<div class="field border">
			<label>Row / cell border:</label>
			<div>
				<input name="row-border-width" type="text" value="1" class="width-picker" />px
				<select name="row-border-style" size="1">
					<option value="solid">Solid</option>
					<option value="none">None</option>
					<option value="hidden">Hidden</option>
					<option value="dotted">Dotted</option>
					<option value="dashed">Dashed</option>
					<option value="double">Double</option>
				</select>
				<input name="row-border-colour" type="text" value="#dddddd" class="colour-picker" />
				<span>The row and cell border is applied to the rows and / or cells depending on the use of the <code>cell-border</code> and <code>row-border</code> classes for the table.</span>
			</div>
			<div class="clear"></div>
		</div>

		<div class="field colour">
			<label>Row background:</label>
			<div>
				<input name="row" type="text" value="#ffffff" class="colour-picker" />
				<span>The row background colour is automatically tinted for mouse hover, row striping and sort column classes.</span>
			</div>
			<div class="clear"></div>
		</div>

		<div class="field colour">
			<label>Row selected:</label>
			<div>
				<input name="row-selected" type="text" value="#b0bed9" class="colour-picker" />
				<span>When a row is selected using <a href="/extras/tabletools">TableTools</a> this is the background colour it will receive. Like the row background colour, it is automatically tinted to fit in with the other features of the stylesheet.</span>
			</div>
			<div class="clear"></div>
		</div>

		<div class="field colour">
			<label>Control text:</label>
			<div>
				<input name="control-text" type="text" value="#333333" class="colour-picker" />
				<span>The control text colour is applied to the elements DataTables adds around the table, including the pagination controls, search input and information display.</span>
			</div>
			<div class="clear"></div>
		</div>

		<div class="field colour">
			<label>Paging button active:</label>
			<div>
				<input name="paging-active" type="text" value="#dcdcdc" class="colour-picker" />
				<span>The colour of the active paging button (that which the current page is shown by) is defined by this colour. Note that non-active paging buttons have a transparent background. A subtle gradient is automatically applied to the button.</span>
			</div>
			<div class="clear"></div>
		</div>

		<div class="field colour">
			<label>Paging button hover:</label>
			<div>
				<input name="paging-hover" type="text" value="#111111" class="colour-picker" />
				<span>When the mouse is hovered over a paging button, this colour is used. As with the active button, a subtle gradient is automatically applied.</span>
			</div>
			<div class="clear"></div>
		</div>

		<div class="field colour">
			<label></label>
			<div>
				<button id="style" class="btn">Create stylesheet</button>
			</div>
			<div class="clear"></div>
		</div>
	</form>
</div>


## Result


<ul class="tabs">
	<li class="active">Table</li>
	<li>CSS</li>
	<li>SCSS</li>
</ul>

<div class="tabs">
	<div>
		<p>A DataTable, styled with the CSS generated based on the values in the form above, is shown below. The different feature classes of the stylesheet, which controls the <a href="classes">styling features</a> the table uses can be toggled by the buttons below. Keep in mind that <code>display</code> is the same as selecting <code>stripe</code>, <code>hover</code>, <code>row-border</code> and <code>order-column</code>.</p>

		<button class="btn active" data-class="display">display</button>
		<button class="btn" data-class="stripe">stripe</button>
		<button class="btn" data-class="hover">hover</button>
		<button class="btn" data-class="cell-border">cell-border</button>
		<button class="btn" data-class="row-border">row-border</button>
		<button class="btn" data-class="order-column">order-column</button>
		<br>

		{example-table}
	</div>
	<div>
		<p>The following is the CSS that was created from the DataTables SCSS file based on the submission of the values above. To use this on your own site, simply copy and paste the CSS in to a file which you save on your own server and load it on your target page.</p>

		<code id="css-out" class="multiline language-css"></code>
	</div>
	<div>
		<p>The following is the CSS that was created from the DataTables SCSS file based on the submission of the values above. To use this on your own site, simply copy and paste the CSS in to a file which you save on your own server and load it on your target page.</p>

		<code id="scss-out" class="multiline language-css"></code>
	</div>
</div>


	]]>
	</content>
</dt-page>