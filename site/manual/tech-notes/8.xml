<?xml version="1.0" encoding="UTF-8" ?>
<dt-page comments="yes" order="8">
	<title>8. DataTables Markdown</title>

	<summary>
	<![CDATA[

[Markdown](http://en.wikipedia.org/wiki/Markdown) is a plain text formatting syntax, initially created by [John Gruber](http://daringfireball.net/projects/markdown/) and now widely used on the web. It is designed to provide an easy to use set of formatting rules which can be applied to a document, converting it from an easily readable and editable plain text format to HTML. The DataTables project uses Markdown in an number of areas.

	]]>
	</summary>

  <css>
    thead th { white-space: nowrap; }
    code { white-space: pre; }
  </css>

  <content>
  <![CDATA[

[Markdown](http://en.wikipedia.org/wiki/Markdown) is a plain text formatting syntax, initially created by [John Gruber](http://daringfireball.net/projects/markdown/) and now widely used on the web. It is designed to provide an easy to use set of formatting rules which can be applied to a document, converting it from an easily readable and editable plain text format to HTML.

The DataTables project uses an extended form of Markdown in an number of areas:

* Forum posts (note this is still in development and not yet deployed!)
* Web-site page comments
* [DataTables web-site source](https://github.com/DataTables/DataTablesSrc/tree/master/site)



## Syntax

DataTables Markdown follows the same rules as [GitHub Flavoured Markdown](https://help.github.com/articles/github-flavored-markdown) with a couple of extensions (see below). The most common Markdown rules used by DataTables are documented below, but for full documentation of the syntax supported in Markdown, please refer to:

* [John Gruber's documentation](http://daringfireball.net/projects/markdown/syntax)
* [Markdown cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)



## Extensions

If you know Markdown already, you will be interested in the extensions DataTables makes use of. These are primarily to add the ability to easily link to different DataTables reference documentation, or highlight different types of inline code:

| Markdown syntax | Action | Example Markdown | Example rendered |
| --------------- | ------ | ---------------- | ---------------- |
| <code>\`dt-api <i>x</i>\`</code>    | Link to the reference documentation for API method _x_            | <code>\`dt-api row().data()\`</code>      | `dt-api row().data()` |
| <code>\`dt-event <i>x</i>\`</code>  | Link to the reference documentation for event _x_                 | <code>\`dt-event draw\`</code>            | `dt-event draw` |
| <code>\`dt-init <i>x</i>\`</code>   | Link to the reference documentation for initialisation option _x_ | <code>\`dt-init scrollY\`</code>          | `dt-init scrollY` |
| <code>\`dt-type <i>x</i>\`</code>   | Link to the reference documentation for data type _x_             | <code>\`dt-type row-selector\`</code>     | `dt-type row-selector` |
| <code>\`dt-tag <i>x</i>\`</code>    | Highlight code as an HTML tag                                     | <code>\`dt-tag tbody\`</code>             | `dt-tag tbody` |
| <code>\`dt-path <i>x</i>\`</code>   | Highlight code as a file path                                     | <code>\`dt-path /home/datatables\`</code> | `dt-path /home/datatables` |
| <code>\`dt-string <i>x</i>\`</code> | Highlight code as a string literal                                | <code>\`dt-string full_numbers\`</code>   | `dt-string full_numbers` |


## Common rules

For the most part Markdown is transparent. Simply type a comment / post as you normally would and Markdown will format it as HTML. Having said that, there are some common rules that you might want to use when writing a comment / post.

### Links

Links can be created automatically by simply typing a web address that starts with `http://` or `https://` and DataTables Markdown will automatically convert it to be an HTML link. The other method is to explicitly create a link using the syntax `[text](address)`. For example:

###### Markdown example:

```
[DataTables](http://datatables.net)
[DataTables on GitHub](https://github.com/DataTables/)
```

###### Rendered example:

[DataTables](http://datatables.net)  
[DataTables on GitHub](https://github.com/DataTables/)


### Italics / Bold

Markdown uses the `*` and `_` characters interchangeably for italic and bold text (although the closing character(s) must match the opening character(s)!). A word or phrase enclosed by a single `*` or `_` is shown as italic text. A word or phrase enclosed by a double `**` or `__` is shown as bold text.

###### Markdown example:

```
This is *italic text* as _is this_. Meanwhile, this is **bold text**, as __is this__.
```

###### Rendered example:

This is *italic text* as _is this_. Meanwhile, this is **bold text**, as __is this__.


### Quotes

Quotes in Markdown operate similar to the quotes that we are all familiar with in e-mails - that is to say, each line that is quoted is preceded by a `> ` character and a space. Blocks of text can be quoted by prefixing each line in the block with a `>` character - Markdown will automatically combine them into a single block quote.

###### Markdown example:

```
> Quoted text
```

###### Rendered example:

> Quoted text


### Lists

A unordered list is created by prefixing a line with a star and space (`* `). An ordered list is created by prefixing a line with a number, period and space (`1. `):

###### Markdown example:

```
* List item
* Another list item

1. Ordered list
1. Second item
```

###### Rendered example:

* List item
* Another list item

1. Ordered list
1. Second item


### Code

There are two styles of showing code available in DataTables Markdown:

* Inline code
* Code blocks

#### Inline code

Inline code highlighting is useful when referring to variable names and the like in a sentence. The code is indicated using the <code>\`</code> symbol. Remember also that in DataTables Markdown you can use <code>\`dt-* _x_\`</code> to indicate that an initialisation option, API method, event or type is to be shown as inline code with a link to the reference documentation (see above).

###### Markdown example:

```
When using `dt-init scrollX` set its value to be `true`.
```

###### Rendered example:

When using `dt-init scrollX` set its value to be `true`.

#### Code blocks with syntax highlighting

The second type of code display DataTables Markdown uses matches GitHub Flavoured Markdown to display larger sections of code. This is done with three <code>\`</code> characters followed optionally by a language identifier for the syntax highlighting language (`dt-string js`, `dt-string html`, `dt-string xml`, `dt-string css` or `dt-string php`) and then a newline. The block is terminated by a line with three more <code>\`</code> characters.

###### Markdown example:

```
  ```js
  $(document).ready( function () {
    var table = $('#myTable').DataTable();
    // ...
  } );
  ```
```

###### Rendered example:

```js
$(document).ready( function () {
  var table = $('#myTable').DataTable();
  // ...
} );
```

	]]>
	</content>
</dt-page>