<?xml version="1.0" encoding="UTF-8" ?>
<dt-page order="none" comments="no">
	<title>Naming in DataTables 1.10</title>

	<summary>
	<![CDATA[


	]]>
	</summary>

	<content>
	<![CDATA[

DataTables 1.9 and earlier used the parameter naming convention known as [Hungarian notation](http://en.wikipedia.org/wiki/Hungarian_notation), where the parameter name is prefixed by the variable type. Hungarian notation can be useful in statically typed languages (although is now generally avoided as compilers and IDEs will perform type checking) it is less useful in a dynamically typed language such as Javascript, and indeed can often lead to confusion. Because of this, [camelCase notation](http://en.wikipedia.org/wiki/CamelCase) is generally preferred in Javascript.

DataTables 1.10 adds support for camelCase notation for its [configuration options](/reference/option), with support for the old Hungarian notation syntax still included for backwards compatibility so your tables won't simply break when you update from an older version of DataTales.

Many of the DataTables extensions had configuration parameters and APIs which also followed the Hungarian notation pattern of DataTables 1.9-. In keeping with the transition to camelCase notation in DataTables core, many of the extensions have the ability to accept parameters in either Hungarian or camelCase style.

Please note that the Hungarian notation option is decremented and will be removed in future versions of the extensions (on the extension's next major version update - i.e. 1.x to 2.x, although 2.x is not planned for [a long time to come](/manual/roadmap) - plenty of life in the 1.x series still!). The documentation for the extensions will be updated to remove the Hungarian notation before that point.

## Why did you use Hungarian notation?

Hungarian notation is an anathema to many developers, however, when I wrote the first version of DataTables, the company I was working for then had strict coding standards that required the use of Hungarian notation, so I was "trained" in its use, hence why it is present.

	]]>
	</content>
</dt-page>
